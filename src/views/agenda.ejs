<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Agenda - <%= cooperativaName %></title>
    <link rel="stylesheet" href="/css/styles.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <meta name="csrf-token" content="">
</head>
<body class="modular-view <%= darkMode ? 'dark-mode' : '' %>">
    <div class="modular-header">
        <h1><i class="material-icons">event</i> Agenda - <%= cooperativaName %></h1>
        <% if (canCreateEvents) { %>
        <button class="btn-primary" id="btn-new-event">
            <i class="material-icons">add</i>
            Nuevo Evento
        </button>
        <% } %>
    </div>

    <div class="agenda-container">
        <!-- Mini Calendar -->
        <div class="mini-calendar">
            <div class="calendar-header">
                <h3 id="calendar-month-year"></h3>
                <div class="calendar-nav">
                    <button class="btn-icon" id="prev-month-btn"><i class="material-icons">chevron_left</i></button>
                    <button class="btn-icon" id="next-month-btn"><i class="material-icons">chevron_right</i></button>
                </div>
            </div>
            <div class="calendar-body">
                <div class="calendar-weekdays">
                    <span>Do</span><span>Lu</span><span>Ma</span><span>Mi</span>
                    <span>Ju</span><span>Vi</span><span>Sa</span>
                </div>
                <div class="calendar-days" id="calendar-days-container">
                    <!-- Calendar days will be generated by JavaScript -->
                </div>
            </div>
        </div>

        <!-- Events List -->
        <div class="events-main">
            <div class="events-header">
                <div class="view-controls">
                    <button class="view-btn <%= viewType === 'day' ? 'active' : '' %>" data-view="day">Día</button>
                    <button class="view-btn <%= viewType === 'week' ? 'active' : '' %>" data-view="week">Semana</button>
                    <button class="view-btn <%= viewType === 'month' ? 'active' : '' %>" data-view="month">Mes</button>
                </div>
            </div>

            <div class="events-content">
                <% if (events && events.length > 0) { %>
                    <div class="events-list">
                        <% events.forEach(event => { %>
                            <div class="event-card" data-event-id="<%= event._id %>">
                                <div class="event-color" style="background-color: <%= event.color || '#1976D2' %>"></div>
                                <div class="event-content">
                                    <div class="event-title"><%= event.title %></div>
                                    <div class="event-time">
                                        <%= new Date(event.startDate).toLocaleDateString('es-UY') %> 
                                        <%= new Date(event.startDate).toLocaleTimeString('es-UY', {hour: '2-digit', minute:'2-digit'}) %>
                                        <% if (event.endDate) { %>
                                        - <%= new Date(event.endDate).toLocaleTimeString('es-UY', {hour: '2-digit', minute:'2-digit'}) %>
                                        <% } %>
                                    </div>
                                    <% if (event.description) { %>
                                    <div class="event-description"><%= event.description %></div>
                                    <% } %>
                                    <% if (event.location) { %>
                                    <div class="event-location">
                                        <i class="material-icons">location_on</i>
                                        <%= event.location %>
                                    </div>
                                    <% } %>
                                    <div class="event-meta">
                                        <span class="event-type"><%= event.eventType %></span>
                                        <% if (event.hasCost && event.cost > 0) { %>
                                        <span class="event-cost">$<%= event.cost %></span>
                                        <% } %>
                                        <% if (event.requiresCheckIn || event.requiresCheckOut) { %>
                                        <span class="event-attendance">
                                            <i class="material-icons">how_to_reg</i>
                                            Asistencia
                                        </span>
                                        <% } %>
                                    </div>
                                </div>
                                <% if (canCreateEvents) { %>
                                <div class="event-actions">
                                    <button class="btn-icon edit-event" data-id="<%= event._id %>">
                                        <i class="material-icons">edit</i>
                                    </button>
                                    <button class="btn-icon delete-event" data-id="<%= event._id %>">
                                        <i class="material-icons">delete</i>
                                    </button>
                                </div>
                                <% } %>
                            </div>
                        <% }) %>
                    </div>
                <% } else { %>
                    <div class="no-events">
                        <i class="material-icons">event_busy</i>
                        <p>No hay eventos para mostrar</p>
                        <% if (canCreateEvents) { %>
                        <button class="btn-primary" id="btn-create-first">Crear Primer Evento</button>
                        <% } %>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Event Modal -->
    <% if (canCreateEvents) { %>
    <div id="eventModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="modalTitle">Nuevo Evento</h3>
                <button class="close-modal"><i class="material-icons">close</i></button>
            </div>
            <div class="modal-body">
                <form id="eventForm">
                    <div class="form-group">
                        <label for="title">Título *</label>
                        <input type="text" id="title" name="title" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="description">Descripción</label>
                        <textarea id="description" name="description"></textarea>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="startDate">Fecha y Hora Inicio *</label>
                            <input type="datetime-local" id="startDate" name="startDate" required>
                        </div>
                        <div class="form-group">
                            <label for="endDate">Fecha y Hora Fin *</label>
                            <input type="datetime-local" id="endDate" name="endDate" required>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="location">Ubicación</label>
                        <input type="text" id="location" name="location">
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="eventType">Tipo</label>
                            <select id="eventType" name="eventType">
                                <option value="meeting">Reunión</option>
                                <option value="workshop">Taller</option>
                                <option value="assembly">Asamblea</option>
                                <option value="workday">Jornada de Trabajo</option>
                                <option value="social">Evento Social</option>
                                <option value="other">Otro</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="color">Color</label>
                            <input type="color" id="color" name="color" value="#1976D2">
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <input type="checkbox" id="hasCost" name="hasCost">
                            Tiene costo
                        </label>
                        <input type="number" id="cost" name="cost" min="0" step="0.01" placeholder="Costo">
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <input type="checkbox" id="requiresCheckIn" name="requiresCheckIn">
                            Requiere marcar entrada
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <input type="checkbox" id="requiresCheckOut" name="requiresCheckOut">
                            Requiere marcar salida
                        </label>
                    </div>
                    
                    <div class="modal-actions">
                        <button type="button" class="btn-secondary close-modal">Cancelar</button>
                        <button type="submit" class="btn-primary">Guardar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <% } %>

    <script>
        // Pass data to JavaScript
        const events = <%- JSON.stringify(events) %>;
        const query = <%- JSON.stringify(query) %>;
        const canCreateEvents = <%= canCreateEvents ? 'true' : 'false' %>;
        
        // Calendar functionality
        let currentDate = new Date();
        
        function generateCalendar(date) {
            const monthNames = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];
            const monthYear = monthNames[date.getMonth()] + ' ' + date.getFullYear();
            document.getElementById('calendar-month-year').textContent = monthYear;
            
            const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
            const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);
            const startDay = firstDay.getDay();
            
            const container = document.getElementById('calendar-days-container');
            container.innerHTML = '';
            
            // Previous month days
            const prevLastDay = new Date(date.getFullYear(), date.getMonth(), 0).getDate();
            for (let i = startDay - 1; i >= 0; i--) {
                const span = document.createElement('span');
                span.className = 'prev-month';
                span.textContent = prevLastDay - i;
                container.appendChild(span);
            }
            
            // Current month days
            for (let day = 1; day <= lastDay.getDate(); day++) {
                const span = document.createElement('span');
                span.textContent = day;
                
                // Check if today
                const today = new Date();
                if (date.getFullYear() === today.getFullYear() && 
                    date.getMonth() === today.getMonth() && 
                    day === today.getDate()) {
                    span.classList.add('today');
                }
                
                // Check if has events
                const hasEvent = events.some(event => {
                    const eventDate = new Date(event.startDate);
                    return eventDate.getFullYear() === date.getFullYear() &&
                           eventDate.getMonth() === date.getMonth() &&
                           eventDate.getDate() === day;
                });
                
                if (hasEvent) {
                    span.classList.add('has-event');
                }
                
                container.appendChild(span);
            }
        }
        
        // Initialize calendar
        generateCalendar(currentDate);
        
        // Calendar navigation
        document.getElementById('prev-month-btn').addEventListener('click', () => {
            currentDate.setMonth(currentDate.getMonth() - 1);
            generateCalendar(currentDate);
        });
        
        document.getElementById('next-month-btn').addEventListener('click', () => {
            currentDate.setMonth(currentDate.getMonth() + 1);
            generateCalendar(currentDate);
        });
        
        // View controls
        document.querySelectorAll('.view-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const view = btn.getAttribute('data-view');
                const newQuery = new URLSearchParams(query);
                newQuery.set('view', view);
                window.location.search = newQuery.toString();
            });
        });
        
        // Event management for admins
        if (canCreateEvents) {
            // Modal controls
            const modal = document.getElementById('eventModal');
            const openBtns = document.querySelectorAll('#btn-new-event, #btn-create-first');
            const closeBtns = document.querySelectorAll('.close-modal');
            
            openBtns.forEach(btn => {
                btn.addEventListener('click', () => {
                    modal.style.display = 'block';
                    document.body.classList.add('modal-open');
                });
            });
            
            closeBtns.forEach(btn => {
                btn.addEventListener('click', () => {
                    modal.style.display = 'none';
                    document.body.classList.remove('modal-open');
                });
            });
            
            // Form submission
            document.getElementById('eventForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                
                const formData = new FormData(e.target);
                const data = Object.fromEntries(formData.entries());
                
                // Add checkboxes manually
                data.hasCost = document.getElementById('hasCost').checked;
                data.requiresCheckIn = document.getElementById('requiresCheckIn').checked;
                data.requiresCheckOut = document.getElementById('requiresCheckOut').checked;
                
                try {
                    const response = await fetch('/agenda/events' + window.location.search, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        window.location.reload();
                    } else {
                        alert('Error: ' + result.error);
                    }
                } catch (error) {
                    alert('Error al crear evento: ' + error.message);
                }
            });
            
            // Delete events
            document.querySelectorAll('.delete-event').forEach(btn => {
                btn.addEventListener('click', async (e) => {
                    if (confirm('¿Estás seguro de que quieres eliminar este evento?')) {
                        const eventId = e.target.closest('button').getAttribute('data-id');
                        
                        try {
                            const response = await fetch(`/agenda/events/${eventId}` + window.location.search, {
                                method: 'DELETE'
                            });
                            
                            const result = await response.json();
                            
                            if (result.success) {
                                window.location.reload();
                            } else {
                                alert('Error: ' + result.error);
                            }
                        } catch (error) {
                            alert('Error al eliminar evento: ' + error.message);
                        }
                    }
                });
            });
        }
    </script>

    <style>
        .modular-view {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .modular-header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 1.5rem 2rem;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modular-header h1 {
            margin: 0;
            font-size: 1.75rem;
            color: #2d3748;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .modular-header h1 .material-icons {
            font-size: 2rem;
            color: #667eea;
        }

        .agenda-container {
            max-width: 1400px;
            margin: 2rem auto;
            padding: 0 2rem;
            display: grid;
            grid-template-columns: 300px 1fr;
            gap: 2rem;
        }

        .mini-calendar {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 16px;
            padding: 1.5rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            height: fit-content;
            position: sticky;
            top: 2rem;
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .calendar-header h3 {
            margin: 0;
            font-size: 1.125rem;
            color: #2d3748;
        }

        .calendar-nav {
            display: flex;
            gap: 0.5rem;
        }

        .btn-icon {
            width: 32px;
            height: 32px;
            border-radius: 8px;
            border: none;
            background: rgba(102, 126, 234, 0.1);
            color: #667eea;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .btn-icon:hover {
            background: #667eea;
            color: white;
            transform: scale(1.1);
        }

        .btn-icon .material-icons {
            font-size: 1.25rem;
        }

        .calendar-weekdays {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 0.25rem;
            margin-bottom: 0.5rem;
            font-weight: 600;
            font-size: 0.875rem;
            color: #667eea;
            text-align: center;
        }

        .calendar-days {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 0.25rem;
        }

        .calendar-days span {
            aspect-ratio: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
            font-size: 0.875rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .calendar-days span.prev-month {
            color: #cbd5e0;
        }

        .calendar-days span.today {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            font-weight: 600;
        }

        .calendar-days span.has-event {
            background: rgba(102, 126, 234, 0.1);
            font-weight: 600;
        }

        .calendar-days span:hover {
            background: rgba(102, 126, 234, 0.2);
        }

        .events-main {
            min-height: 400px;
        }

        .events-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .view-controls {
            display: flex;
            gap: 0.5rem;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            padding: 0.5rem;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .view-btn {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            border: none;
            background: transparent;
            color: #667eea;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .view-btn.active {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
        }

        .view-btn:hover:not(.active) {
            background: rgba(102, 126, 234, 0.1);
        }

        .events-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .event-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 16px;
            padding: 1.5rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            display: flex;
            gap: 1rem;
            transition: all 0.3s ease;
            border-left: 4px solid #667eea;
        }

        .event-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
        }

        .event-color {
            width: 4px;
            border-radius: 2px;
        }

        .event-content {
            flex: 1;
        }

        .event-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #2d3748;
            margin-bottom: 0.5rem;
        }

        .event-time {
            color: #667eea;
            font-size: 0.95rem;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.25rem;
        }

        .event-description {
            color: #4b5563;
            margin-bottom: 0.75rem;
            line-height: 1.6;
        }

        .event-location {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #6b7280;
            margin-bottom: 0.75rem;
        }

        .event-meta {
            display: flex;
            gap: 0.75rem;
            flex-wrap: wrap;
        }

        .event-type,
        .event-cost,
        .event-attendance {
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.875rem;
            background: rgba(102, 126, 234, 0.1);
            color: #667eea;
            font-weight: 500;
        }

        .event-actions {
            display: flex;
            gap: 0.5rem;
            align-items: flex-start;
        }

        .no-events {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 4rem 2rem;
            text-align: center;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        }

        .no-events .material-icons {
            font-size: 5rem;
            color: #cbd5e0;
            margin-bottom: 1rem;
        }

        .no-events p {
            color: #64748b;
            margin: 1rem 0 2rem 0;
            font-size: 1.125rem;
        }

        .btn-primary {
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);
        }

        .btn-secondary {
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            background: rgba(255, 255, 255, 0.9);
            color: #667eea;
            border: 2px solid #667eea;
        }

        .btn-secondary:hover {
            background: #667eea;
            color: white;
        }

        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.6);
            backdrop-filter: blur(5px);
            align-items: center;
            justify-content: center;
        }

        .modal.block {
            display: flex !important;
        }

        .modal-content {
            background: rgba(255, 255, 255, 0.98);
            backdrop-filter: blur(20px);
            margin: 2rem;
            padding: 0;
            border-radius: 20px;
            width: 90%;
            max-width: 700px;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
            animation: modalSlideIn 0.3s ease;
        }

        @keyframes modalSlideIn {
            from {
                transform: translateY(-50px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.5rem 2rem;
            border-bottom: 1px solid #e5e7eb;
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 20px 20px 0 0;
        }

        .modal-header h3 {
            margin: 0;
            color: white;
            font-size: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .close-modal {
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            cursor: pointer;
            padding: 0.5rem;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .close-modal:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: rotate(90deg);
        }

        .modal-body {
            padding: 2rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: #4b5563;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.3s ease;
            font-family: inherit;
        }

        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }

        .modal-actions {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 1px solid #e5e7eb;
        }

        /* Dark mode */
        .dark-mode {
            background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);
        }

        .dark-mode .modular-header {
            background: rgba(45, 55, 72, 0.95);
            border-bottom-color: rgba(255, 255, 255, 0.1);
        }

        .dark-mode .modular-header h1 {
            color: #f7fafc;
        }

        .dark-mode .mini-calendar,
        .dark-mode .view-controls,
        .dark-mode .event-card,
        .dark-mode .no-events {
            background: rgba(45, 55, 72, 0.95);
        }

        .dark-mode .calendar-header h3,
        .dark-mode .event-title {
            color: #f7fafc;
        }

        .dark-mode .event-description {
            color: #cbd5e0;
        }

        .dark-mode .no-events p {
            color: #a0aec0;
        }

        .dark-mode .modal-content {
            background: rgba(45, 55, 72, 0.98);
        }

        .dark-mode .modal-body {
            background: rgba(45, 55, 72, 0.98);
        }

        .dark-mode .form-group label {
            color: #cbd5e0;
        }

        .dark-mode .form-group input,
        .dark-mode .form-group select,
        .dark-mode .form-group textarea {
            background: rgba(26, 32, 44, 0.5);
            border-color: rgba(255, 255, 255, 0.1);
            color: #e2e8f0;
        }

        .dark-mode .modal-actions,
        .dark-mode .modal-header {
            border-color: rgba(255, 255, 255, 0.1);
        }

        @media (max-width: 768px) {
            .agenda-container {
                grid-template-columns: 1fr;
                padding: 1rem;
            }

            .mini-calendar {
                position: relative;
                top: 0;
            }

            .modular-header {
                flex-direction: column;
                gap: 1rem;
            }

            .form-row {
                grid-template-columns: 1fr;
            }

            .modal-content {
                margin: 1rem;
                width: calc(100% - 2rem);
            }
        }
    </style>
</body>
</html>